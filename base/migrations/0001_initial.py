# Generated by Django 4.2.14 on 2024-08-08 21:22

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last', models.BooleanField(default=False)),
                ('total', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('quantity', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Panier',
                'verbose_name_plural': 'Paniers',
            },
        ),
        migrations.CreateModel(
            name='CartItemProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('size', models.CharField(blank=True, max_length=50, null=True)),
                ('color', models.CharField(blank=True, max_length=50, null=True)),
                ('cart_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='panier_items', to='base.cartitem')),
            ],
            options={
                'verbose_name': 'Article panier',
                'verbose_name_plural': 'Articles paniers',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('start_time', models.TimeField(blank=True, help_text='Date de début de validité du code promotionnel', null=True)),
                ('end_time', models.TimeField(blank=True, help_text='Date de fin de validité du code promotionnel', null=True)),
                ('active', models.BooleanField(default=False, help_text='Code promotionnel actif ou inactif')),
            ],
            options={
                'verbose_name': 'Categorie',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'Couleur',
                'verbose_name_plural': 'Couleurs',
            },
        ),
        migrations.CreateModel(
            name='Images',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=155)),
                ('imgP', models.ImageField(blank=True, max_length=155, upload_to='product_images/')),
                ('imgS', models.ImageField(blank=True, max_length=155, null=True, upload_to='product_images/')),
                ('imgT', models.ImageField(blank=True, max_length=155, null=True, upload_to='product_images/')),
            ],
            options={
                'verbose_name': 'Image',
                'verbose_name_plural': 'Images',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('is_promo', models.BooleanField(default=False)),
                ('preparation_time', models.PositiveIntegerField(default=0, help_text='Temps de préparation en minutes')),
                ('price', models.DecimalField(decimal_places=2, max_digits=15)),
                ('second_price', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('stock', models.IntegerField(default=0)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='base.category')),
            ],
            options={
                'verbose_name': 'Produit',
                'verbose_name_plural': 'Produits',
            },
        ),
        migrations.CreateModel(
            name='PromoCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(help_text='Code promotionnel unique', max_length=20, unique=True)),
                ('description', models.TextField(help_text='Description du code promotionnel', max_length=200)),
                ('discount_type', models.CharField(choices=[('percent', 'Pourcentage'), ('amount', 'Montant fixe')], default='percent', help_text='Type de réduction (pourcentage ou montant fixe)', max_length=60)),
                ('discount_value', models.DecimalField(decimal_places=2, help_text='Montant de la réduction en pourcentage (0-100) ou montant fixe', max_digits=7)),
                ('start_date', models.DateTimeField(help_text='Date de début de validité du code promotionnel')),
                ('end_date', models.DateTimeField(help_text='Date de fin de validité du code promotionnel')),
                ('active', models.BooleanField(default=False, help_text='Code promotionnel actif ou inactif')),
            ],
            options={
                'verbose_name': 'Code Promo',
                'verbose_name_plural': 'Code Promos',
            },
        ),
        migrations.CreateModel(
            name='Size',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'Taille',
                'verbose_name_plural': 'Tailles',
            },
        ),
        migrations.CreateModel(
            name='ProductSize',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=0)),
                ('product_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_sizes', to='base.product')),
                ('size_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_sizes', to='base.size')),
            ],
            options={
                'verbose_name': 'Taille produit',
                'verbose_name_plural': 'Taille de données',
            },
        ),
        migrations.CreateModel(
            name='ProductColor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=0)),
                ('color_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_colors', to='base.color')),
                ('product_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_colors', to='base.product')),
            ],
            options={
                'verbose_name': 'Couleur produit',
                'verbose_name_plural': 'Couleurs produits',
            },
        ),
        migrations.AddField(
            model_name='product',
            name='colors',
            field=models.ManyToManyField(related_name='products', through='base.ProductColor', to='base.color'),
        ),
        migrations.AddField(
            model_name='product',
            name='image',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.images'),
        ),
        migrations.AddField(
            model_name='product',
            name='sizes',
            field=models.ManyToManyField(related_name='products', through='base.ProductSize', to='base.size'),
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_total', models.DecimalField(decimal_places=2, max_digits=10)),
                ('delivery_address', models.TextField()),
                ('is_delivery', models.BooleanField(default=False)),
                ('is_piece', models.BooleanField(default=False)),
                ('monnaie', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('pickup_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('status', models.CharField(choices=[('en_attente', 'En attente'), ('en_cours', 'En cours de préparation'), ('en_livraison', 'En cours de livraison'), ('livree', 'Livrée'), ('recuperer', 'Récupérée'), ('annulee', 'Annulée')], default='en_attente', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('time_cook', models.PositiveIntegerField(default=0)),
                ('items', models.ManyToManyField(to='base.cartitemproduct')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.customuser')),
            ],
            options={
                'verbose_name': 'Commande',
                'verbose_name_plural': 'Commandes',
            },
        ),
        migrations.AddField(
            model_name='category',
            name='image',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.images'),
        ),
        migrations.AddField(
            model_name='cartitemproduct',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.product'),
        ),
        migrations.AddField(
            model_name='cartitem',
            name='products',
            field=models.ManyToManyField(through='base.CartItemProduct', to='base.product'),
        ),
        migrations.AddField(
            model_name='cartitem',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='paniers', to='accounts.customuser'),
        ),
    ]
